- set_fact:
     postgres_data: "/var/lib/pgsql/data"
     postgres_service: "postgresql.service"
- name: install postgresql-server
  package:
    name:
      - postgresql-server
      # - postgresql-utils
      - postgresql-contrib
  become: yes
  # when CentoOS
- name: reinstall systemctl.py
  shell: "test ! -f /usr/bin/systemctl.py  || cp -v /usr/bin/systemctl.py /usr/bin/systemctl"
  become: yes
  register: done
  changed_when: "' -> ' in done.stdout"
- name: initdb postgresql-server
  shell: postgresql-setup initdb
  become: yes
- name: set postgres listen
  lineinfile:
    regexp: ".*listen_addresses.*"
    line: "listen_addresses = '{{postgres_listen}}'"
    path: "{{postgres_data}}/postgresql.conf"
  become: yes
- name: set postgres non-local
  replace:
    regexp: "(.*host.*ident)"
    replace: '# \1'
    path: "{{postgres_data}}/pg_hba.conf"
  become: yes
- name: set postgres hba access
  lineinfile:
    regexp: "host all all"
    line: "host all all {{postgres_allows}} md5"
    path: "{{postgres_data}}/pg_hba.conf"
  become: yes
- name: reinstall systemctl.py
  shell: "test ! -f /usr/bin/systemctl.py  || cp -v /usr/bin/systemctl.py /usr/bin/systemctl"
  become: yes
  register: done
  changed_when: "' -> ' in done.stdout"
- name: create postgres user
  shell: |
     set -ex
     systemctl start {{postgres_service}}
     if [ -n '{{postgres_username}}' ]; then
     echo "CREATE USER {{postgres_username}} LOGIN ENCRYPTED PASSWORD '{{postgres_password}}' CREATEDB" \
       | runuser -u postgres /usr/bin/psql
     fi
     if [ -n '{{postgres_testuser}}' ]; then
     echo "CREATE USER {{postgres_testuser}} LOGIN ENCRYPTED PASSWORD '{{postgres_testpass}}'" \
       | runuser -u postgres /usr/bin/psql
     fi
     systemctl stop {{postgres_service}}
  become: yes
- name: enable postgres server
  service:
     name: "{{postgres_service}}"
     enabled: yes
  become: yes
